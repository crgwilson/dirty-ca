# OpenSSL root CA configuration file.

[ default ]
ca       = root
dir      = $ca
base_url = http://pki.garbage-day.dev
aia_url  = $base_url/$ca.pem
crl_url  = $base_url/$ca.crl
ocsp_url = http://ocsp.garbage-day.dev/$ca


[ req ]
# Options for the `req` sub-command (`man req`).
default_bits        = 4096
default_md          = sha384
prompt              = no
encrypt_key         = no
utf8                = yes
string_mask         = utf8only
distinguished_name  = root_ca_dn


[ ca ]
# Options for the `ca` sub-command (`man ca`)
default_ca = root_ca


[ root_ca_dn ]
# See https://en.wikipedia.org/wiki/Certificate_signing_request
countryName            = US
stateOrProvinceName    = MD
localityName           = Frederick
0.organizationName     = Garbage Day Inc.
organizationalUnitName = Infrastructure
commonName             = root.garbage-day.dev
emailAddress           = admin@garbage-day.dev


[ root_ca ]
# Directory and file locations.
certs             = $dir/certs
new_certs_dir     = $dir/newcerts
crl_dir           = $dir/crl

# The root key and root certificate
certificate       = $certs/$ca.pem
private_key       = $dir/private/root-key.pem

serial            = $dir/serial
database          = $dir/index.txt
RANDFILE          = $dir/private/.rand

# For certificate revocation lists.
crlnumber         = $dir/crlnumber
crl               = $crl_dir/crl.pem
crl_extensions    = crl_ext
default_crl_days  = 30

default_md        = sha384
name_opt          = ca_default
cert_opt          = ca_default
default_days      = 365
preserve          = no
policy            = policy_strict
unique_subject    = yes

x509_extensions   = root_ca_ext


[ policy_strict ]
# The root CA should only sign intermediate certificates that match.
# See the POLICY FORMAT section of `man ca`.
countryName             = match
stateOrProvinceName     = match
organizationName        = match
organizationalUnitName  = optional
commonName              = supplied
emailAddress            = optional


[ policy_loose ]
# Allow the intermediate CA to sign a more diverse range of certificates.
# See the POLICY FORMAT section of the `ca` man page.
countryName             = optional
stateOrProvinceName     = optional
localityName            = optional
organizationName        = optional
organizationalUnitName  = optional
commonName              = supplied
emailAddress            = optional


[ root_ca_ext ]
# Extensions for a typical CA (`man x509v3_config`).
subjectKeyIdentifier   = hash
authorityKeyIdentifier = keyid:always,issuer
basicConstraints       = critical, CA:true
keyUsage               = critical, digitalSignature, cRLSign, keyCertSign


[ intermediate_ca_ext ]
# Extensions for a typical intermediate CA (`man x509v3_config`).
subjectKeyIdentifier   = hash
authorityKeyIdentifier = keyid:always,issuer
basicConstraints       = critical, CA:true, pathlen:0
keyUsage               = critical, digitalSignature, cRLSign, keyCertSign
authorityInfoAccess    = @ocsp_info
crlDistributionPoints  = @crl_info


[ ocsp_ext ]
# Extension for OCSP signing certificates (`man ocsp`).
basicConstraints       = CA:FALSE
subjectKeyIdentifier   = hash
authorityKeyIdentifier = keyid,issuer
keyUsage               = critical, digitalSignature
extendedKeyUsage       = critical, OCSPSigning
crlDistributionPoints  = @crl_info


[ crl_ext ]
# Extensions for CRLs (`man x509v3_config`).
authorityKeyIdentifier = keyid:always
authorityInfoAccess    = @issuer_info


[ issuer_info ]
caIssuers;URI.0 = $aia_url


[ crl_info ]
URI.0 = $crl_url


[ ocsp_info ]
caIssuers;URI.0 = $aia_url
OCSP;URI.0      = $ocsp_url
